// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 11 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int selectedarticle_11 = 11;
	/// <summary>PID: 11 | Type: read</summary>
	public const int selectedarticle = 11;
	/// <summary>PID: 12 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int selectednumberofarticles_12 = 12;
	/// <summary>PID: 12 | Type: read</summary>
	public const int selectednumberofarticles = 12;
	/// <summary>PID: 21 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int selectedarticletodelete_21 = 21;
	/// <summary>PID: 21 | Type: read</summary>
	public const int selectedarticletodelete = 21;
	public class Write
	{
		/// <summary>PID: 10 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int btnaddorder_10 = 10;
		/// <summary>PID: 10 | Type: write</summary>
		public const int btnaddorder = 10;
		/// <summary>PID: 20 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int btndeletearticles_20 = 20;
		/// <summary>PID: 20 | Type: write</summary>
		public const int btndeletearticles = 20;
		/// <summary>PID: 30 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int btndeleteorders_30 = 30;
		/// <summary>PID: 30 | Type: write</summary>
		public const int btndeleteorders = 30;
		/// <summary>PID: 61 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int selectedarticle_61 = 61;
		/// <summary>PID: 61 | Type: write</summary>
		public const int selectedarticle = 61;
		/// <summary>PID: 62 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int selectednumberofarticles_62 = 62;
		/// <summary>PID: 62 | Type: write</summary>
		public const int selectednumberofarticles = 62;
		/// <summary>PID: 71 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int selectedarticletodelete_71 = 71;
		/// <summary>PID: 71 | Type: write</summary>
		public const int selectedarticletodelete = 71;
	}
	public class Orders
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersinstance_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int ordersinstance = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersarticlename_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int ordersarticlename = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersarticlenumber_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int ordersarticlenumber = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int orderstimeoforder_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int orderstimeoforder = 1004;
			public class Write
			{
				/// <summary>PID: 1005 | Type: write</summary>
				[EditorBrowsable(EditorBrowsableState.Never)]
				public const int ordersuseraction_1005 = 1005;
				/// <summary>PID: 1005 | Type: write</summary>
				public const int ordersuseraction = 1005;
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersinstance_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int ordersinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersarticlename_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int ordersarticlename = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ordersarticlenumber_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int ordersarticlenumber = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int orderstimeoforder_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int orderstimeoforder = 3;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 10  | Type: write | DISCREETS: Add Article = 1, One of Each = 2</summary>
	public System.Object Btnaddorder {get { return Protocol.GetParameter(10); }set { Protocol.SetParameter(10, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Delete Articles = 3</summary>
	public System.Object Btndeletearticles {get { return Protocol.GetParameter(20); }set { Protocol.SetParameter(20, value); }}
	/// <summary>PID: 30  | Type: write | DISCREETS: Clear Orders = 1</summary>
	public System.Object Btndeleteorders {get { return Protocol.GetParameter(30); }set { Protocol.SetParameter(30, value); }}
	/// <summary>PID: 61  | Type: write | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	public System.Object Selectedarticle {get { return Protocol.GetParameter(61); }set { Protocol.SetParameter(61, value); }}
	/// <summary>PID: 62  | Type: write</summary>
	public System.Object Selectednumberofarticles {get { return Protocol.GetParameter(62); }set { Protocol.SetParameter(62, value); }}
	/// <summary>PID: 71  | Type: write | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	public System.Object Selectedarticletodelete {get { return Protocol.GetParameter(71); }set { Protocol.SetParameter(71, value); }}
	/// <summary>PID: 1005  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Ordersuseraction {get { return Protocol.GetParameter(1005); }set { Protocol.SetParameter(1005, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	OrdersQActionTable orders { get; set; }
	object Afterstartup_dummy { get; set; }
	object Btnaddorder_10 { get; set; }
	object Btnaddorder { get; set; }
	object Selectedarticle_11 { get; set; }
	object Selectedarticle { get; set; }
	object Selectednumberofarticles_12 { get; set; }
	object Selectednumberofarticles { get; set; }
	object Btndeletearticles_20 { get; set; }
	object Btndeletearticles { get; set; }
	object Selectedarticletodelete_21 { get; set; }
	object Selectedarticletodelete { get; set; }
	object Btndeleteorders_30 { get; set; }
	object Btndeleteorders { get; set; }
	object Selectedarticle_61 { get; set; }
	object Selectednumberofarticles_62 { get; set; }
	object Selectedarticletodelete_71 { get; set; }
	object Ordersinstance_1001 { get; set; }
	object Ordersinstance { get; set; }
	object Ordersarticlename_1002 { get; set; }
	object Ordersarticlename { get; set; }
	object Ordersarticlenumber_1003 { get; set; }
	object Ordersarticlenumber { get; set; }
	object Orderstimeoforder_1004 { get; set; }
	object Orderstimeoforder { get; set; }
	object Ordersuseraction_1005 { get; set; }
	object Ordersuseraction { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public OrdersQActionTable orders { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 10  | Type: write | DISCREETS: Add Article = 1, One of Each = 2</summary>
	public System.Object Btnaddorder_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: write | DISCREETS: Add Article = 1, One of Each = 2</summary>
	public System.Object Btnaddorder {get { return Write.Btnaddorder; }set { Write.Btnaddorder = value; }}
	/// <summary>PID: 11  | Type: read | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectedarticle_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 11  | Type: read | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	public System.Object Selectedarticle {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectednumberofarticles_12 {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	public System.Object Selectednumberofarticles {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Delete Articles = 3</summary>
	public System.Object Btndeletearticles_20 {get { return GetParameter(20); }set { SetParameter(20, value); }}
	/// <summary>PID: 20  | Type: write | DISCREETS: Delete Articles = 3</summary>
	public System.Object Btndeletearticles {get { return Write.Btndeletearticles; }set { Write.Btndeletearticles = value; }}
	/// <summary>PID: 21  | Type: read | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectedarticletodelete_21 {get { return GetParameter(21); }set { SetParameter(21, value); }}
	/// <summary>PID: 21  | Type: read | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	public System.Object Selectedarticletodelete {get { return GetParameter(21); }set { SetParameter(21, value); }}
	/// <summary>PID: 30  | Type: write | DISCREETS: Clear Orders = 1</summary>
	public System.Object Btndeleteorders_30 {get { return GetParameter(30); }set { SetParameter(30, value); }}
	/// <summary>PID: 30  | Type: write | DISCREETS: Clear Orders = 1</summary>
	public System.Object Btndeleteorders {get { return Write.Btndeleteorders; }set { Write.Btndeleteorders = value; }}
	/// <summary>PID: 61  | Type: write | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectedarticle_61 {get { return GetParameter(61); }set { SetParameter(61, value); }}
	/// <summary>PID: 62  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectednumberofarticles_62 {get { return GetParameter(62); }set { SetParameter(62, value); }}
	/// <summary>PID: 71  | Type: write | DISCREETS: Tea = 1, Coffee = 2, Soup = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Selectedarticletodelete_71 {get { return GetParameter(71); }set { SetParameter(71, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersinstance_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Ordersinstance {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersarticlename_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Ordersarticlename {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersarticlenumber_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Ordersarticlenumber {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Orderstimeoforder_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Orderstimeoforder {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Ordersuseraction_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: write | DISCREETS: Delete = 1</summary>
	public System.Object Ordersuseraction {get { return Write.Ordersuseraction; }set { Write.Ordersuseraction = value; }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		orders = new OrdersQActionTable(this, 1000, "orders");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class OrdersQActionTable : QActionTable, IEnumerable<OrdersQActionRow>
{
	public OrdersQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<OrdersQActionRow> GetEnumerator() { return new QActionTableEnumerator<OrdersQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class OrdersQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersinstance_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Ordersinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersarticlename_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Ordersarticlename { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ordersarticlenumber_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Ordersarticlenumber { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Orderstimeoforder_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Orderstimeoforder { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: write</summary>
	public System.Object Ordersuseraction_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: write</summary>
	public System.Object Ordersuseraction { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public OrdersQActionRow() : base(0, 5) { }
	public OrdersQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator OrdersQActionRow(System.Object[] source) { return new OrdersQActionRow(source); }
	public static implicit operator System.Object[](OrdersQActionRow source) { return source.ToObjectArray(); }
}
}
